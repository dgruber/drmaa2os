# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: cimg/go:1.21
     
     # 4GB let compiling fail from time to time / trying with -p 1
    resource_class: large 

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
#    working_directory: $HOME/go/src/github.com/dgruber/drmaa2os
    steps:
      - checkout
      - run: sudo apt-get update
      - run: sudo apt-get install -y libgpgme-dev libassuan-dev libbtrfs-dev libdevmapper-dev
      - run: go build -v -p 1
      - run: go test -v
      - run: go test -v ./pkg/d2hlp
      - run: go test -v ./pkg/helper
      - run: go test -v ./pkg/storage/...
      - run: go test -v ./pkg/jobtracker/simpletracker/...
      - run:
          name: Code coverage file
          command: go test ./ ./pkg/helper ./pkg/d2hlp ./pkg/storage ./pkg/jobtracker/simpletracker -race -coverprofile=coverage.txt -covermode=atomic
      - run:
          name: Code coverage
          command: bash <(curl -s https://codecov.io/bash)
  libdrmaa:
    resource_class: large 
    docker:
      - image: drmaa/gridengine:latest
    steps:
      - checkout
      - run:
          command: |
            echo "Install Grid Engine"
            pushd /opt/sge
            ./install.sh
            source /opt/sge/default/common/settings.sh
            export LD_LIBRARY_PATH=$SGE_ROOT/lib/lx-amd64
            export PATH=$PATH:/opt/sge/include
            export CGO_LDFLAGS="-L$SGE_ROOT/lib/lx-amd64/"
            export CGO_CFLAGS="-DSOG -I$SGE_ROOT/include"
            echo "Cicrle test server is under extreme load -> alarm state in SGE"
            qconf -mattr queue load_thresholds "np_load_avg=1000" all.q
            popd
            echo "Install Go"
            yum install -y wget tar git gcc
            rm -rf /usr/local/go || true
            export VERSION=1.18.4 OS=linux ARCH=amd64 && wget https://dl.google.com/go/go$VERSION.$OS-$ARCH.tar.gz && tar -C /usr/local -xzvf go$VERSION.$OS-$ARCH.tar.gz && rm go$VERSION.$OS-$ARCH.tar.gz
            export PATH=/usr/local/go/bin:${PATH}:/opt/sge/include
            go version
            go build -v -p 1
            qhost
            qstat -F
            cd ./pkg/jobtracker/libdrmaa
            go mod download
            go test -v .
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - libdrmaa
